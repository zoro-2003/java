package Generics;

import java.util. Arrays;
import java.util. Comparator;
public class QuickSort {
 public static <T> void quicksort(T[] array, Comparator<T> comparator)
 {
 quicksort (array, 0, array.length - 1, comparator);
 }
private static <T> void quicksort(T[] array, int low, int high, Comparator<T> comparator)
 {
 if (low < high)
 {
 int pivotIndex = partition(array, low, high, comparator);
 quicksort(array, low, pivotIndex - 1, comparator);
 quicksort(array, pivotIndex + 1, high, comparator);
 }
 }
 private static <T> int partition(T[] array, int low, int high, Comparator<T> comparator)
 {
 T pivot = array[high];
 int i = low - 1;
 for (int j = low; j < high; j++)
 {
 if (comparator.compare(array[j], pivot) <= 0)
 {
 i++;
 // Swap array[i] and array[j]
 T temp = array[i];
 array[i] = array[j];
 array[j] = temp;
 }}
 T temp = array[i + 1];
 array[i + 1] = array[high];
 array[high] = temp;
 return i + 1;
 }
 public static void main(String[] args)
 {
 Integer[] intArray = {5, 2, 9, 1, 5, 6};
 quicksort(intArray, Comparator.naturalOrder());
 System.out.println("Sorted Integer Array: " + Arrays.toString(intArray));
 String[] strArray = {"apple", "banana", "grapes", "orange", "cherry"};
 quicksort(strArray, Comparator.naturalOrder());
 System.out.println("Sorted String Array: " + Arrays.toString(strArray));
 }
}