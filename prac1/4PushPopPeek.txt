package Generics;

import java.util.ArrayList;
import java.util.EmptyStackException;
import java.util.List;
class GenericStack<T>
{
private List<T> stack;
public GenericStack()
{
stack = new ArrayList<>();
}
public void push(T item)
{
stack.add(item);
}
public T pop()
{
if (isEmpty())
{
 throw new EmptyStackException();
}
return stack.remove(stack.size() - 1);
}
public T peek()
{
if (isEmpty())
{
throw new EmptyStackException();
}
return stack.get(stack.size() - 1);
}
public boolean isEmpty()
{
return stack.isEmpty();
}
public int size()
{
return stack.size();
}}
public class PushPopPeek {
public static void main(String[] args)
 {
 GenericStack<Integer> intStack = new GenericStack<>();
 intStack.push(10);
 intStack.push(20);
 intStack.push(30);
 intStack.push(50);
 intStack.push(80);
 intStack.push(125);
 intStack.push(150);
 System.out.println("Top element: " + intStack.peek());
 System.out.println("Popped: " + intStack.pop());
 System.out.println("Size: " + intStack.size());
 GenericStack<String> stringStack = new GenericStack<>();
 stringStack.push("Hello");
 stringStack.push("World");
 System.out.println("Top element: " + stringStack.peek());
 System.out.println("Popped: " + stringStack.pop());
 System.out.println("Size: " + stringStack.size());
 }}