create database spring;
use spring;
CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50),
    email VARCHAR(100)
);

pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>prac9_2</groupId>
  <artifactId>prac9_2</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>prac9_2</name>
  <dependencies>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>5.3.16</version>
    </dependency>
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>8.0.32</version>
    </dependency>
<dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>5.3.30</version> <!-- Ensure compatibility with your Java version -->
    </dependency>
    <!-- Spring Context for ApplicationContext and Annotations -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>5.3.30</version>
    </dependency>
  </dependencies>

</project>


AppConfig.java
package prac9_2;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DriverManagerDataSource;

import javax.sql.DataSource;

@Configuration
@ComponentScan(basePackages = "prac9_2")
public class AppConfig {

    @Bean
    public DataSource dataSource() {
        DriverManagerDataSource dataSource = new DriverManagerDataSource();
        dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver");
        dataSource.setUrl("jdbc:mysql://localhost:3306/spring"); // Replace with your DB name
        dataSource.setUsername("root"); // Replace with your username
        dataSource.setPassword("system"); // Replace with your password
        return dataSource;
    }

    @Bean
    public JdbcTemplate jdbcTemplate(DataSource dataSource) {
        return new JdbcTemplate(dataSource);
    }
}


EmployeeService.java
package prac9_2;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

@Service
public class EmployeeService {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    // Insert a new employee using PreparedStatement
    public void insertEmployee(String name, String department, double salary) {
        String sql = "INSERT INTO employees (name, department, salary) VALUES (?, ?, ?)";
        jdbcTemplate.update(sql, name, department, salary);
        System.out.println("Employee inserted successfully.");
    }

    // Update an employee's department using PreparedStatement
    public void updateEmployeeDepartment(int id, String newDepartment) {
        String sql = "UPDATE employees SET department = ? WHERE id = ?";
        jdbcTemplate.update(sql, newDepartment, id);
        System.out.println("Employee department updated successfully.");
    }

    // Delete an employee using PreparedStatement
    public void deleteEmployee(int id) {
        String sql = "DELETE FROM employees WHERE id = ?";
        jdbcTemplate.update(sql, id);
        System.out.println("Employee deleted successfully.");
    }

    // Fetch and display all employees
    public void fetchAllEmployees() {
        String sql = "SELECT * FROM employees";
        jdbcTemplate.query(sql, (rs, rowNum) -> {
            System.out.println("ID: " + rs.getInt("id") +
                               ", Name: " + rs.getString("name") +
                               ", Department: " + rs.getString("department") +
                               ", Salary: " + rs.getDouble("salary"));
            return null;
        });
    }
}



SpringJdbcPeraparedStatement
package prac9_2;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

public class SpringJdbcPreparedStatementExample {

    public static void main(String[] args) {
        // Load the Spring application context
        ApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);

        // Get the EmployeeService bean
        EmployeeService employeeService = context.getBean(EmployeeService.class);

        // Insert employees
        employeeService.insertEmployee("John Doe", "HR", 50000);
        employeeService.insertEmployee("Jane Smith", "IT", 60000);

        // Update an employee's department
        employeeService.updateEmployeeDepartment(1, "Finance");

        // Fetch all employees
        System.out.println("\nList of Employees:");
        employeeService.fetchAllEmployees();

        // Delete an employee
        employeeService.deleteEmployee(2);

        // Fetch all employees after deletion
        System.out.println("\nList of Employees after deletion:");
        employeeService.fetchAllEmployees();
    }
}

